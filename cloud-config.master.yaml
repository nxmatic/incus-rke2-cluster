#cloud-config
# Overlay for control-plane (master) nodes

hostname: master-control-node
fqdn: bioskop-master-control-node.mammoth-skate.ts.net

write_files:
  # Master-only pre-start logic
  - path: /usr/local/sbin/rke2-pre-start
    permissions: "0755"
    content: |
      #!/usr/bin/env -S bash -exu -o pipefail

      : Load the RKE2 profile
      source /etc/rancher/rke2/profile

      : Patch the cilium config with cluster environment variables
      yq --inplace --from-file=<( cat <<EoE
      ( select( .kind == "CiliumBGPAdvertisement" ) | .spec ) |=
        ( .advertisements[0].advertisementType = "PodCIDR" ) |
      ( select( .kind == "CiliumBGPNodeConfigOverride" ) | .spec ) |=
        ( .bgpInstances[0].localPort = 179 ) |
      ( select( .kind == "CiliumBGPNodeConfigOverride" ) | .spec.bgpInstances[0].peers[] ) |=
        ( .peerAddress = "${CLUSTER_NODE_INET}" ) |
      ( select( .kind == "HelmChartConfig") | .spec ) |=
        ( .valuesContent |= ( from_yaml |
                               .cluster.name = "${CLUSTER_NAME}" |
                               .cluster.id = ${CLUSTER_SUBNET} |
                               to_yaml ) ) |
      ( select( .kind == "CiliumLoadBalancerIPPool" ) | .spec ) |=
        ( .blocks[0] = { "cidr": "${CLUSTER_LOADBALANCERS_CIDR}", "min": "129", "max": "254" } )
      EoE
      ) /var/lib/rancher/rke2/server/manifests/rke2-cilium-config.yaml

      : Patch the tailscale operator with cluster environment variables
      yq --inplace --from-file=<( cat <<EoE
      ( select( .kind == "HelmChart" ) | .spec ) |=
        ( .valuesContent |= ( from_yaml |
                               .oauth.clientId = "${TSID}" |
                               .oauth.clientSecret = "${TSKEY}" |
                               .operatorConfig.hostname = "${CLUSTER_NAME}-tailscale-operator" |
                               to_yaml ) )
      EoE
      ) /var/lib/rancher/rke2/server/manifests/tailscale-operator.yaml
  # RKE2 server TLS SANs
  - path: /etc/rancher/rke2/config.yaml.d/tls-san.yaml
    content: |
      tls-san:
        - localhost
        - master-control-node
        - peer-control-node1
        - peer-control-node2

  # RKE2 server core config
  - path: /etc/rancher/rke2/config.yaml.d/core.yaml
    content: |
      write-kubeconfig-mode: "0640"
      etcd-expose-metrics: true
      cni:
        - cilium
      ingress-controller: traefik

  # Disable default controllers
  - path: /etc/rancher/rke2/config.yaml.d/disable.yaml
    content: |
      disable:
        - rke2-snapshot-controller
        - rke2-snapshot-controller-crd
        - rke2-snapshot-validation-webhook
        - rke2-ingress-nginx

  # Traefik HelmChartConfig
  - path: /var/lib/rancher/rke2/server/manifests/rke2-traefik-config.yaml
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-traefik
        namespace: kube-system
      spec:
        valuesContent: |-
          additionalArguments:
            - "--api.insecure=true"
          ports:
            web:
              expose:
                default: true
            websecure:
              expose:
                default: true

  # Cilium HelmChartConfig and CRDs
  - path: /var/lib/rancher/rke2/server/manifests/rke2-cilium-config.yaml
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: cilium
        namespace: kube-system
      spec:
        valuesContent: |-
          bgpControlPlane:
            enabled: true
          cluster:
            name: "default"
            id: 1
          clustermesh:
            useAPIServer: true
            apiserver:
              service:
                type: LoadBalancer
                loadBalancerClass: io.cilium/bgp-control-plane
          envoy:
            enabled: true
          gatewayAPI:
            enabled: false
          ingressController:
            default: true
            enabled: true
            loadBalancerMode: dedicated
          hubble:
            enabled: true
            relay:
              enabled: true
            ui:
              enabled: true
          kubeProxyReplacement: true
          socketLB:
            hostNamespaceOnly: true
          operator:
            hostNetwork: true
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumLoadBalancerIPPool
      metadata:
        name: "pool"
      spec:
        blocks:
          - cidr: "${CLUSTER_LOADBALANCERS_CIDR}"
            min: "129"
            max: "254"
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumL2AnnouncementPolicy
      metadata:
        name: l2policy
      spec:
        loadBalancerIPs: true
        interfaces:
          - eth0
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumBGPClusterConfig
      metadata:
        name: cilium-bgp
      spec:
        bgpInstances:
          - name: "instance-65000"
            localASN: 65000
            peers:
              - name: "master"
                peerASN: 65000
                peerAddress: "master-control-node"
                peerConfigRef:
                  name: "peer-config-generic"
              - name: "peer1"
                peerASN: 65000
                peerAddress: "peer1-control-node"
                peerConfigRef:
                  name: "peer-config-generic"
              - name: "peer2"
                peerASN: 65000
                peerAddress: "peer2-control-node"
                peerConfigRef:
                  name: "peer-config-generic"
              - name: "peer3"
                peerASN: 65000
                peerAddress: "peer3-control-node"
                peerConfigRef:
                  name: "peer-config-generic"
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumBGPNodeConfigOverride
      metadata:
        name: bgpv2-cplane-dev-multi-homing-worker
      spec:
        bgpInstances:
          - name: "instance-65000"
            localPort: 179
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumBGPPeerConfig
      metadata:
        name: peer-config-generic
      spec:
        families:
          - afi: ipv4
            safi: unicast
            advertisements:
              matchLabels:
                advertise: "generic"
      ---
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumBGPAdvertisement
      metadata:
        name: services
        labels:
          advertise: generic
      spec:
        advertisements:
          - advertisementType: "PodCIDR"
          - advertisementType: "Service"
            service:
              addresses:
                - LoadBalancerIP
            selector:
              matchExpressions:
                - key: "somekey"
                  operator: In
                  values:
                    - "never-used-value"

  # Envoy Gateway
  - path: /var/lib/rancher/rke2/server/manifests/envoy-gateway.yaml
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        name: envoy-gateway
        namespace: envoy-gateway-system
      spec:
        repo: https://charts.envoyproxy.io
        chart: gateway-helm
        version: 0.5.0
        targetNamespace: envoy-gateway-system
        createNamespace: true
      ---
      apiVersion: gateway.networking.k8s.io/v1
      kind: GatewayClass
      metadata:
        name: envoy
      spec:
        controllerName: gateway.envoyproxy.io/gatewayclass-controller

  # OpenEBS ZFS
  - path: /var/lib/rancher/rke2/server/manifests/openebs-zfs.yaml
    content: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openebs
      ---
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        name: openebs-zfs
        namespace: openebs
      spec:
        chart: zfs-localpv
        repo: https://openebs.github.io/zfs-localpv
        version: 2.8.0
        targetNamespace: openebs
        createNamespace: true
        valuesContent: |-
          zfsNode:
            kubeletDir: /var/lib/rancher/rke2/agent
      ---
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: openebs-zfs
      provisioner: zfs.csi.openebs.io
      parameters:
        poolname: tank
        fstype: zfs
      reclaimPolicy: Delete
      volumeBindingMode: WaitForFirstConsumer
      allowVolumeExpansion: true

  # Tailscale Operator
  - path: /var/lib/rancher/rke2/server/manifests/tailscale-operator.yaml
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        namespace: kube-system
        name: tailscale-operator
      spec:
        repo: https://pkgs.tailscale.com/helmcharts
        chart: tailscale-operator
        version: 1.82.0
        targetNamespace: tailscale-system
        createNamespace: true
        valuesContent: |-
          oauth:
            clientId: "${TSID}"
            clientSecret: "${TSKEY}"
          operatorConfig:
            hostname: "${CLUSTER_NAME}-tailscale-operator"
            debug: true
      ---
      apiVersion: tailscale.com/v1alpha1
      kind: Connector
      metadata:
        name: ts-controlplane-lb-routes
      spec:
        hostname: ${CLUSTER_NAME}-controlplane-lb-routes  # Name visible in Tailscale admin
        subnetRouter:
          advertiseRoutes:

  # kube-vip installer
  - path: /usr/local/sbin/rke2-vip-install
    permissions: "0755"
    content: |
      #!/usr/bin/env -S bash -exu -o pipefail
      : Install kube-vip on master control node
      kubectl apply -f https://kube-vip.io/manifests/rbac.yaml
      ctr images pull ghcr.io/kube-vip/kube-vip:latest
      ctr -n k8s.io run --rm --net-host ghcr.io/kube-vip/kube-vip:latest \
        vip /kube-vip manifest daemonset \
          --arp --interface eth0 --address master-control-node --controlplane --leaderElection \
          --taint --services --inCluster | \
        tee /var/lib/rancher/rke2/server/manifests/kube-vip.yaml

  # Systemd overrides
  - path: /etc/systemd/system/rke2-server.service.d/override.conf
    content: |
      [Service]
      Restart=always
      RestartSec=10s
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/rke2-server.service.d/start.conf
    content: |
      [Unit]
      Requires=rke2-remount-shared.service rke2-install.service
      Wants=rke2-remount-shared.service
      After=rke2-remount-shared.service rke2-install.service
      [Service]
      ExecStartPre=/bin/sh -xc '/usr/local/sbin/rke2-pre-start'
      ExecStartPost=/bin/sh -xc '/usr/local/sbin/rke2-post-start'

  - path: /etc/systemd/system/rke2-agent.service.d/start.conf
    content: |
      [Service]
      ExecStartPre=/usr/local/sbin/rke2-pre-start
      ExecStartPost=/usr/local/sbin/rke2-post-start
